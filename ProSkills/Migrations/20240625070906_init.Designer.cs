// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProSkills.Models;

#nullable disable

namespace ProSkills.Migrations
{
    [DbContext(typeof(ITIContext))]
    [Migration("20240625070906_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseTrainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CompletionRatio")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<decimal?>("Result")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("CourseTrainee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 20,
                            Result = 21.9116511245221m,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 870,
                            Result = 82.3630586213506m,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 990,
                            Result = 18.9660293131714m,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 540,
                            Result = 47.1948820753936m,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 730,
                            Result = 65.6454517996896m,
                            TraineeId = 5
                        },
                        new
                        {
                            Id = 6,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 720,
                            Result = 1.16213007204599m,
                            TraineeId = 6
                        },
                        new
                        {
                            Id = 7,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 180,
                            Result = 35.6163235411804m,
                            TraineeId = 7
                        },
                        new
                        {
                            Id = 8,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 220,
                            Result = 94.7677329725497m,
                            TraineeId = 8
                        },
                        new
                        {
                            Id = 9,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 10,
                            Result = 40.7634609785328m,
                            TraineeId = 9
                        },
                        new
                        {
                            Id = 10,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 380,
                            Result = 14.4969253400149m,
                            TraineeId = 10
                        },
                        new
                        {
                            Id = 11,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 780,
                            Result = 30.2297721477793m,
                            TraineeId = 11
                        },
                        new
                        {
                            Id = 12,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 790,
                            Result = 32.3523759536236m,
                            TraineeId = 12
                        },
                        new
                        {
                            Id = 13,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 570,
                            Result = 3.29760241972212m,
                            TraineeId = 13
                        },
                        new
                        {
                            Id = 14,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 620,
                            Result = 61.2234397492669m,
                            TraineeId = 14
                        },
                        new
                        {
                            Id = 15,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 770,
                            Result = 1.36413445292765m,
                            TraineeId = 15
                        },
                        new
                        {
                            Id = 16,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 250,
                            Result = 96.0430359073104m,
                            TraineeId = 16
                        },
                        new
                        {
                            Id = 17,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 260,
                            Result = 99.0365367419388m,
                            TraineeId = 17
                        },
                        new
                        {
                            Id = 18,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 710,
                            Result = 6.60361663480616m,
                            TraineeId = 18
                        },
                        new
                        {
                            Id = 19,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 670,
                            Result = 19.2935099605968m,
                            TraineeId = 19
                        },
                        new
                        {
                            Id = 20,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 410,
                            Result = 70.4344016078499m,
                            TraineeId = 20
                        },
                        new
                        {
                            Id = 21,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 260,
                            Result = 87.4746791181789m,
                            TraineeId = 21
                        },
                        new
                        {
                            Id = 22,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 280,
                            Result = 68.7898595243542m,
                            TraineeId = 22
                        },
                        new
                        {
                            Id = 23,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 470,
                            Result = 57.5158734680257m,
                            TraineeId = 23
                        },
                        new
                        {
                            Id = 24,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 190,
                            Result = 86.918182957674m,
                            TraineeId = 24
                        },
                        new
                        {
                            Id = 25,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 330,
                            Result = 62.3102721929976m,
                            TraineeId = 25
                        },
                        new
                        {
                            Id = 26,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 20,
                            Result = 22.1806725235156m,
                            TraineeId = 26
                        },
                        new
                        {
                            Id = 27,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 0,
                            Result = 91.8383963493703m,
                            TraineeId = 27
                        },
                        new
                        {
                            Id = 28,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 210,
                            Result = 86.6022019535439m,
                            TraineeId = 28
                        },
                        new
                        {
                            Id = 29,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 150,
                            Result = 79.2851638996594m,
                            TraineeId = 29
                        },
                        new
                        {
                            Id = 30,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 720,
                            Result = 21.954969050748m,
                            TraineeId = 30
                        },
                        new
                        {
                            Id = 31,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 690,
                            Result = 13.6095121277668m,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 32,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 200,
                            Result = 8.36497361142433m,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 33,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 710,
                            Result = 25.7083375948901m,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 34,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 630,
                            Result = 62.5666118505127m,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 35,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 160,
                            Result = 34.3756240142652m,
                            TraineeId = 5
                        },
                        new
                        {
                            Id = 36,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 810,
                            Result = 52.898864835601m,
                            TraineeId = 6
                        },
                        new
                        {
                            Id = 37,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 240,
                            Result = 2.5674892554842m,
                            TraineeId = 7
                        },
                        new
                        {
                            Id = 38,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 760,
                            Result = 69.1683493370055m,
                            TraineeId = 8
                        },
                        new
                        {
                            Id = 39,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 740,
                            Result = 19.8587483415415m,
                            TraineeId = 9
                        },
                        new
                        {
                            Id = 40,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 920,
                            Result = 7.71569627592578m,
                            TraineeId = 10
                        },
                        new
                        {
                            Id = 41,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 920,
                            Result = 39.5005602349547m,
                            TraineeId = 11
                        },
                        new
                        {
                            Id = 42,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 130,
                            Result = 68.8981358268259m,
                            TraineeId = 12
                        },
                        new
                        {
                            Id = 43,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 760,
                            Result = 54.8133186288355m,
                            TraineeId = 13
                        },
                        new
                        {
                            Id = 44,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 820,
                            Result = 25.5346672894066m,
                            TraineeId = 14
                        },
                        new
                        {
                            Id = 45,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 210,
                            Result = 91.3422863861807m,
                            TraineeId = 15
                        },
                        new
                        {
                            Id = 46,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 360,
                            Result = 11.0564267207244m,
                            TraineeId = 16
                        },
                        new
                        {
                            Id = 47,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 600,
                            Result = 16.2203687842128m,
                            TraineeId = 17
                        },
                        new
                        {
                            Id = 48,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 110,
                            Result = 69.6137094262557m,
                            TraineeId = 18
                        },
                        new
                        {
                            Id = 49,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 930,
                            Result = 14.2557541759735m,
                            TraineeId = 19
                        },
                        new
                        {
                            Id = 50,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 330,
                            Result = 45.2516220957203m,
                            TraineeId = 20
                        },
                        new
                        {
                            Id = 51,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 430,
                            Result = 76.6489199435918m,
                            TraineeId = 21
                        },
                        new
                        {
                            Id = 52,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 140,
                            Result = 39.9514831218444m,
                            TraineeId = 22
                        },
                        new
                        {
                            Id = 53,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 230,
                            Result = 65.3582868231482m,
                            TraineeId = 23
                        },
                        new
                        {
                            Id = 54,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 760,
                            Result = 67.8543337044465m,
                            TraineeId = 24
                        },
                        new
                        {
                            Id = 55,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 430,
                            Result = 78.4388878197958m,
                            TraineeId = 25
                        },
                        new
                        {
                            Id = 56,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 750,
                            Result = 39.1172168142542m,
                            TraineeId = 26
                        },
                        new
                        {
                            Id = 57,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 600,
                            Result = 2.35532897024489m,
                            TraineeId = 27
                        },
                        new
                        {
                            Id = 58,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 220,
                            Result = 62.9089897077738m,
                            TraineeId = 28
                        },
                        new
                        {
                            Id = 59,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 640,
                            Result = 80.8836874966782m,
                            TraineeId = 29
                        },
                        new
                        {
                            Id = 60,
                            CompletionRatio = 0.0,
                            CourseId = 2,
                            Level = 0,
                            Points = 560,
                            Result = 60.9835547897257m,
                            TraineeId = 30
                        },
                        new
                        {
                            Id = 61,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 190,
                            Result = 20.1472352648534m,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 62,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 220,
                            Result = 33.3543903981548m,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 63,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 60,
                            Result = 14.3465802882638m,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 64,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 740,
                            Result = 0.536083606640569m,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 65,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 970,
                            Result = 59.1523204817984m,
                            TraineeId = 5
                        },
                        new
                        {
                            Id = 66,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 550,
                            Result = 21.258024829754m,
                            TraineeId = 6
                        },
                        new
                        {
                            Id = 67,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 910,
                            Result = 92.3771175674847m,
                            TraineeId = 7
                        },
                        new
                        {
                            Id = 68,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 260,
                            Result = 28.8717430029784m,
                            TraineeId = 8
                        },
                        new
                        {
                            Id = 69,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 670,
                            Result = 88.9459096963426m,
                            TraineeId = 9
                        },
                        new
                        {
                            Id = 70,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 640,
                            Result = 50.6018246409627m,
                            TraineeId = 10
                        },
                        new
                        {
                            Id = 71,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 10,
                            Result = 43.3230221596939m,
                            TraineeId = 11
                        },
                        new
                        {
                            Id = 72,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 700,
                            Result = 52.5667586596675m,
                            TraineeId = 12
                        },
                        new
                        {
                            Id = 73,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 60,
                            Result = 0.496448360393065m,
                            TraineeId = 13
                        },
                        new
                        {
                            Id = 74,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 150,
                            Result = 92.6060816214592m,
                            TraineeId = 14
                        },
                        new
                        {
                            Id = 75,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 360,
                            Result = 57.3061599740995m,
                            TraineeId = 15
                        },
                        new
                        {
                            Id = 76,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 620,
                            Result = 61.9421726959415m,
                            TraineeId = 16
                        },
                        new
                        {
                            Id = 77,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 360,
                            Result = 70.2284467440058m,
                            TraineeId = 17
                        },
                        new
                        {
                            Id = 78,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 970,
                            Result = 63.1484214215422m,
                            TraineeId = 18
                        },
                        new
                        {
                            Id = 79,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 630,
                            Result = 29.0390520251172m,
                            TraineeId = 19
                        },
                        new
                        {
                            Id = 80,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 270,
                            Result = 66.0564566661241m,
                            TraineeId = 20
                        },
                        new
                        {
                            Id = 81,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 940,
                            Result = 16.8140455057726m,
                            TraineeId = 21
                        },
                        new
                        {
                            Id = 82,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 460,
                            Result = 82.3641616076155m,
                            TraineeId = 22
                        },
                        new
                        {
                            Id = 83,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 70,
                            Result = 99.2901487878093m,
                            TraineeId = 23
                        },
                        new
                        {
                            Id = 84,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 400,
                            Result = 65.7124802415522m,
                            TraineeId = 24
                        },
                        new
                        {
                            Id = 85,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 570,
                            Result = 17.8273748344194m,
                            TraineeId = 25
                        },
                        new
                        {
                            Id = 86,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 930,
                            Result = 60.5982509718012m,
                            TraineeId = 26
                        },
                        new
                        {
                            Id = 87,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 320,
                            Result = 76.21004113688m,
                            TraineeId = 27
                        },
                        new
                        {
                            Id = 88,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 420,
                            Result = 71.2772358095331m,
                            TraineeId = 28
                        },
                        new
                        {
                            Id = 89,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 240,
                            Result = 50.6239986377161m,
                            TraineeId = 29
                        },
                        new
                        {
                            Id = 91,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 810,
                            Result = 38.9274962765532m,
                            TraineeId = 31
                        },
                        new
                        {
                            Id = 92,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 50,
                            Result = 53.0082793240882m,
                            TraineeId = 32
                        },
                        new
                        {
                            Id = 93,
                            CompletionRatio = 0.0,
                            CourseId = 3,
                            Level = 0,
                            Points = 150,
                            Result = 36.7666406822574m,
                            TraineeId = 33
                        },
                        new
                        {
                            Id = 94,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 40,
                            Result = 45.0688747601147m,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 95,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 500,
                            Result = 20.1589634745413m,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 96,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 740,
                            Result = 14.6297540731767m,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 97,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 770,
                            Result = 96.034734247974m,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 98,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 380,
                            Result = 19.5022165374355m,
                            TraineeId = 5
                        },
                        new
                        {
                            Id = 99,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 410,
                            Result = 71.3886397719405m,
                            TraineeId = 6
                        },
                        new
                        {
                            Id = 100,
                            CompletionRatio = 0.0,
                            CourseId = 4,
                            Level = 0,
                            Points = 790,
                            Result = 97.3078494384773m,
                            TraineeId = 7
                        },
                        new
                        {
                            Id = 101,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 660,
                            Result = 51.7332301446941m,
                            TraineeId = 31
                        },
                        new
                        {
                            Id = 102,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 920,
                            Result = 72.3347042255008m,
                            TraineeId = 32
                        },
                        new
                        {
                            Id = 103,
                            CompletionRatio = 0.0,
                            CourseId = 1,
                            Level = 0,
                            Points = 250,
                            Result = 79.4573984963835m,
                            TraineeId = 33
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Instructor",
                            NormalizedName = "INSTRUCTOR"
                        },
                        new
                        {
                            Id = "3",
                            Name = "Trainee",
                            NormalizedName = "TRAINEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "2",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "3",
                            RoleId = "1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProSkills.Models.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseTraineeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseTraineeId");

                    b.HasIndex("LessonId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("ProSkills.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1a81f27-82e2-4668-a81e-099fd25580a3",
                            Country = 0,
                            Email = "ahmed9821hussein@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Ahmed Hussein",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMED9821HUSSEIN@GMAIL.COM",
                            NormalizedUserName = "AHMED9821HUSSEIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEH5UQ2cT6f2S8VaF8xSZIidHqc9Ezu9R2qSBjg3P5QIEOTe//fUnt0FZ2UQImo9Zvg==",
                            Phone = "01015983533",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "\\Images\\profiles\\profile-picture.jpg",
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "ahmed9821hussein@gmail.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5f033c83-a459-4f42-8870-2d940ec492e4",
                            Country = 0,
                            Email = "MuhammedSadat@outlook.com",
                            EmailConfirmed = true,
                            FullName = "Muhammed Sadat",
                            LockoutEnabled = false,
                            NormalizedEmail = "MUHAMMEDSADAT@OUTLOOK.COM",
                            NormalizedUserName = "MUHAMMEDSADAT@OUTLOOK.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFiogE6gxtTPo5d24qz5ai4Yui+J4ytEhA3bm0PIjunsBSSyWcnKnZkAq2sDpHV+Lg==",
                            Phone = "01050403037",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "\\ThemeFront\\img\\User.jpg",
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "MuhammedSadat@outlook.com"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e1b95eea-f094-4fbb-bed3-407bd6054c2e",
                            Country = 0,
                            Email = "gamalsaied.90@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Gamal Said",
                            LockoutEnabled = false,
                            NormalizedEmail = "GAMALSAIED.90@GMAIL.COM",
                            NormalizedUserName = "GAMALSAIED.90@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFfEfULaeD2HxEvpUZCWL8aFxxyee+mnbl+Zm2X8ArbBczexV08hwdyEJTttHLNsdQ==",
                            Phone = "01033901616",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "\\ThemeFront\\img\\User.jpg",
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "gamalsaied.90@gmail.com"
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Assessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Assessments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3424),
                            Description = "1- Draw grids on the attached dwg.\n2- Change the size of the Bubble.\n3- Change the text size of inside the bubble.",
                            IsDeleted = false,
                            Points = 20,
                            Title = "Grids Task",
                            UpdatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3437)
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3444),
                            Description = "1- Create the type of column with dimension 25*50 cm2 and .6*.6.\n2- Draw the columns on the attached dwg.",
                            IsDeleted = false,
                            Points = 25,
                            Title = "Columns Task",
                            UpdatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3447)
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3451),
                            Description = "1- Create the type of Footings with dimension 1.5*1.5 and 1*.6.\n2- Draw the Footings on the attached dwg.",
                            IsDeleted = false,
                            Points = 25,
                            Title = "Footings Task",
                            UpdatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3454)
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3457),
                            Description = "1- Create the type of Beams with dimension 25*50.\n2- Draw the Beams on the attached dwg.",
                            IsDeleted = false,
                            Points = 25,
                            Title = "Beams Task",
                            UpdatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3459)
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3464),
                            Description = "1- Create the type of floors generic 300mm.\n2- Draw the floors on the attached dwg.",
                            IsDeleted = false,
                            Points = 30,
                            Title = "Floors Task",
                            UpdatedAt = new DateTime(2024, 6, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(3466)
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Building Information Modeling software",
                            Image = "path/to/bim/image.jpg",
                            IsDeleted = false,
                            Name = "BIM Software"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Computer-Aided Design software",
                            Image = "path/to/cad/image.jpg",
                            IsDeleted = false,
                            Name = "CAD Software"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Software for construction planning and management",
                            Image = "path/to/construction/image.jpg",
                            IsDeleted = false,
                            Name = "Construction Software"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Software for structural engineering analysis and design",
                            Image = "path/to/structural/image.jpg",
                            IsDeleted = false,
                            Name = "Structural Engineering Software"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Software for civil engineering design and analysis",
                            Image = "path/to/civil/image.jpg",
                            IsDeleted = false,
                            Name = "Civil Engineering Software"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Software for project management",
                            Image = "path/to/project/image.jpg",
                            IsDeleted = false,
                            Name = "Project Management Software"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Advanced Building Information Modeling software",
                            Image = "path/to/advanced_bim/image.jpg",
                            IsDeleted = false,
                            Name = "Advanced BIM Software"
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("downloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Chapters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Description = "Basics of Structural Revit",
                            IsDeleted = false,
                            Title = "Introduction to Structural Revit",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Description = "Detailed look into advanced elements",
                            IsDeleted = false,
                            Title = "Advanced Structural Elements",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            Description = "Best practices for using Structural Revit",
                            IsDeleted = false,
                            Title = "Structural Revit Best Practices",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Description = "Conducting structural analysis",
                            IsDeleted = false,
                            Title = "Structural Analysis in Revit",
                            downloadLink = "https://sadat.vip/"
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CourseImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfAssessment")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfLessons")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfTrainees")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RedeemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalFilesSize")
                        .HasColumnType("float");

                    b.Property<int>("instructorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("instructorId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Structural Revit",
                            EndAt = new DateTime(2024, 7, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2218),
                            Hours = 40,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Structural Revit",
                            NumberOfAssessment = 5,
                            NumberOfLessons = 20,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 2, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2179),
                            TotalFilesSize = 10.5,
                            instructorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Arch Revit",
                            EndAt = new DateTime(2024, 8, 9, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2319),
                            Hours = 60,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Arch Revit",
                            NumberOfAssessment = 7,
                            NumberOfLessons = 25,
                            NumberOfTrainees = 30,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 9, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2314),
                            TotalFilesSize = 15.199999999999999,
                            instructorId = 8
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn MEP Revit",
                            EndAt = new DateTime(2024, 7, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2384),
                            Hours = 45,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "MEP Revit",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 22,
                            NumberOfTrainees = 20,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 6, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2378),
                            TotalFilesSize = 11.699999999999999,
                            instructorId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Structural AutoCAD",
                            EndAt = new DateTime(2024, 8, 24, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2415),
                            Hours = 55,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Structural AutoCAD",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 23,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 5, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2411),
                            TotalFilesSize = 13.5,
                            instructorId = 7
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Arch AutoCAD",
                            EndAt = new DateTime(2024, 8, 4, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2445),
                            Hours = 50,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Arch AutoCAD",
                            NumberOfAssessment = 7,
                            NumberOfLessons = 25,
                            NumberOfTrainees = 30,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 2, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2440),
                            TotalFilesSize = 14.1,
                            instructorId = 14
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn MEP AutoCAD",
                            EndAt = new DateTime(2024, 8, 14, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2478),
                            Hours = 55,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "MEP AutoCAD",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 24,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 7, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2475),
                            TotalFilesSize = 12.300000000000001,
                            instructorId = 15
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn 3D AutoCAD",
                            EndAt = new DateTime(2024, 8, 19, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2528),
                            Hours = 50,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "3D AutoCAD",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 23,
                            NumberOfTrainees = 20,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 3, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2508),
                            TotalFilesSize = 12.800000000000001,
                            instructorId = 14
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Tekla",
                            EndAt = new DateTime(2024, 7, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2596),
                            Hours = 45,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Tekla",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 22,
                            NumberOfTrainees = 30,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 1, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2592),
                            TotalFilesSize = 13.199999999999999,
                            instructorId = 5
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn SketchUP",
                            EndAt = new DateTime(2024, 8, 4, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2701),
                            Hours = 40,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "SketchUP",
                            NumberOfAssessment = 5,
                            NumberOfLessons = 20,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 4, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2697),
                            TotalFilesSize = 10.800000000000001,
                            instructorId = 9
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn SAP 2000",
                            EndAt = new DateTime(2024, 8, 9, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2724),
                            Hours = 50,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "SAP 2000",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 22,
                            NumberOfTrainees = 20,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 6, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2721),
                            TotalFilesSize = 12.199999999999999,
                            instructorId = 13
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn STAAD Pro",
                            EndAt = new DateTime(2024, 8, 14, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2750),
                            Hours = 55,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "STAAD Pro",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 24,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 8, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2746),
                            TotalFilesSize = 13.5,
                            instructorId = 4
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn CIVIL 3D",
                            EndAt = new DateTime(2024, 8, 4, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2772),
                            Hours = 45,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "CIVIL 3D",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 22,
                            NumberOfTrainees = 30,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 5, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2768),
                            TotalFilesSize = 13.1,
                            instructorId = 14
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn ETABS",
                            EndAt = new DateTime(2024, 7, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2790),
                            Hours = 40,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "ETABS",
                            NumberOfAssessment = 5,
                            NumberOfLessons = 20,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 3, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2787),
                            TotalFilesSize = 10.6,
                            instructorId = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn SAFE",
                            EndAt = new DateTime(2024, 7, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2816),
                            Hours = 35,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "SAFE",
                            NumberOfAssessment = 5,
                            NumberOfLessons = 18,
                            NumberOfTrainees = 20,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 2, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2812),
                            TotalFilesSize = 11.199999999999999,
                            instructorId = 15
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 6,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Primavera P6",
                            EndAt = new DateTime(2024, 8, 9, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2843),
                            Hours = 60,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Primavera P6",
                            NumberOfAssessment = 7,
                            NumberOfLessons = 25,
                            NumberOfTrainees = 30,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 9, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2839),
                            TotalFilesSize = 15.800000000000001,
                            instructorId = 12
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Microsoft Project",
                            EndAt = new DateTime(2024, 7, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2868),
                            Hours = 45,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Microsoft Project",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 22,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 6, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2865),
                            TotalFilesSize = 12.5,
                            instructorId = 4
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Navisworks",
                            EndAt = new DateTime(2024, 8, 14, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2894),
                            Hours = 55,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Navisworks",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 24,
                            NumberOfTrainees = 30,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 7, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2890),
                            TotalFilesSize = 13.800000000000001,
                            instructorId = 5
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 7,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Advanced Revit Structure",
                            EndAt = new DateTime(2024, 8, 19, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2916),
                            Hours = 50,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Revit Structure Advanced",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 23,
                            NumberOfTrainees = 20,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 3, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2913),
                            TotalFilesSize = 12.300000000000001,
                            instructorId = 2
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 7,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Advanced Revit Architecture",
                            EndAt = new DateTime(2024, 7, 30, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2941),
                            Hours = 45,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Revit Architecture Advanced",
                            NumberOfAssessment = 6,
                            NumberOfLessons = 22,
                            NumberOfTrainees = 25,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 1, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2937),
                            TotalFilesSize = 13.699999999999999,
                            instructorId = 15
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 7,
                            CourseImagePath = "/Images/DefaultCourseImg.png",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Description = "Learn Advanced Revit MEP",
                            EndAt = new DateTime(2024, 7, 25, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2963),
                            Hours = 35,
                            IsDeleted = false,
                            Location = "Online",
                            Name = "Revit MEP Advanced",
                            NumberOfAssessment = 5,
                            NumberOfLessons = 18,
                            NumberOfTrainees = 20,
                            Price = 0,
                            Rating = 0,
                            ReviewCount = 0,
                            StartAt = new DateTime(2024, 7, 2, 10, 9, 6, 279, DateTimeKind.Local).AddTicks(2959),
                            TotalFilesSize = 11.4,
                            instructorId = 11
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.JoinRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentProofPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("JoinRequests");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TaskLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("downloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChapterId = 1,
                            Content = "Installing Revit and initial setup",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 30, 0, 0),
                            Title = "Revit Installation and Setup",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 2,
                            ChapterId = 1,
                            Content = "Understanding basic structural elements",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 45, 0, 0),
                            Title = "Basic Structural Elements",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 3,
                            ChapterId = 2,
                            Content = "Advanced design techniques",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 1, 0, 0, 0),
                            Title = "Advanced Structural Design",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 4,
                            ChapterId = 2,
                            Content = "Designing complex structures",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 50, 0, 0),
                            Title = "Complex Structures",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 5,
                            ChapterId = 3,
                            Content = "Overview of best practices",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 40, 0, 0),
                            Title = "Best Practices Overview",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 6,
                            ChapterId = 3,
                            Content = "Tips for effective modeling",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 35, 0, 0),
                            Title = "Modeling Tips",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 7,
                            ChapterId = 4,
                            Content = "Basics of structural analysis",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 45, 0, 0),
                            Title = "Introduction to Structural Analysis",
                            downloadLink = "https://sadat.vip/"
                        },
                        new
                        {
                            Id = 8,
                            ChapterId = 4,
                            Content = "Advanced techniques in structural analysis",
                            IsDeleted = false,
                            TaskLink = "https://www.youtube.com/watch?v=Nd6U2KgHI6k",
                            Time = new TimeSpan(0, 0, 55, 0, 0),
                            Title = "Advanced Analysis Techniques",
                            downloadLink = "https://sadat.vip/"
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfAssesments")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLessons")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTrainees")
                        .HasColumnType("int");

                    b.Property<double>("TotlaFileSize")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Package");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Hours = 10,
                            Image = "image1.jpg",
                            IsDeleted = false,
                            Name = "Free",
                            NumberOfAssesments = 5,
                            NumberOfLessons = 15,
                            NumberOfTrainees = 20,
                            TotlaFileSize = 1024.0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Hours = 10,
                            Image = "image2.jpg",
                            IsDeleted = false,
                            Name = "Premium",
                            NumberOfAssesments = 5,
                            NumberOfLessons = 15,
                            NumberOfTrainees = 40,
                            TotlaFileSize = 1024.0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Hours = 10,
                            Image = "image3.jpg",
                            IsDeleted = false,
                            Name = "Advanced",
                            NumberOfAssesments = 5,
                            NumberOfLessons = 15,
                            NumberOfTrainees = 40,
                            TotlaFileSize = 1024.0
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.RedeemCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isAvalible")
                        .HasColumnType("bit");

                    b.Property<int>("packageid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RedeemCode");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "gamal",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            IsDeleted = false,
                            PackageName = "Premium",
                            isAvalible = true,
                            packageid = 1
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Country")
                        .HasColumnType("int");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Bio for Trainee 1",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee1@example.com",
                            IsDeleted = false,
                            Name = "Trainee 1 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Bio for Trainee 2",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee2@example.com",
                            IsDeleted = false,
                            Name = "Trainee 2 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Bio for Trainee 3",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee3@example.com",
                            IsDeleted = false,
                            Name = "Trainee 3 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Bio for Trainee 4",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee4@example.com",
                            IsDeleted = false,
                            Name = "Trainee 4 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Bio for Trainee 5",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee5@example.com",
                            IsDeleted = false,
                            Name = "Trainee 5 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Bio for Trainee 6",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee6@example.com",
                            IsDeleted = false,
                            Name = "Trainee 6 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Bio for Trainee 7",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee7@example.com",
                            IsDeleted = false,
                            Name = "Trainee 7 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Bio for Trainee 8",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee8@example.com",
                            IsDeleted = false,
                            Name = "Trainee 8 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Bio for Trainee 9",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee9@example.com",
                            IsDeleted = false,
                            Name = "Trainee 9 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Bio for Trainee 10",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee10@example.com",
                            IsDeleted = false,
                            Name = "Trainee 10 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 11,
                            Bio = "Bio for Trainee 11",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee11@example.com",
                            IsDeleted = false,
                            Name = "Trainee 11 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 12,
                            Bio = "Bio for Trainee 12",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee12@example.com",
                            IsDeleted = false,
                            Name = "Trainee 12 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 13,
                            Bio = "Bio for Trainee 13",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee13@example.com",
                            IsDeleted = false,
                            Name = "Trainee 13 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 14,
                            Bio = "Bio for Trainee 14",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee14@example.com",
                            IsDeleted = false,
                            Name = "Trainee 14 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 15,
                            Bio = "Bio for Trainee 15",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee15@example.com",
                            IsDeleted = false,
                            Name = "Trainee 15 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 16,
                            Bio = "Bio for Trainee 16",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee16@example.com",
                            IsDeleted = false,
                            Name = "Trainee 16 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 17,
                            Bio = "Bio for Trainee 17",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee17@example.com",
                            IsDeleted = false,
                            Name = "Trainee 17 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 18,
                            Bio = "Bio for Trainee 18",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee18@example.com",
                            IsDeleted = false,
                            Name = "Trainee 18 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 19,
                            Bio = "Bio for Trainee 19",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee19@example.com",
                            IsDeleted = false,
                            Name = "Trainee 19 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 20,
                            Bio = "Bio for Trainee 20",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee20@example.com",
                            IsDeleted = false,
                            Name = "Trainee 20 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 21,
                            Bio = "Bio for Trainee 21",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee21@example.com",
                            IsDeleted = false,
                            Name = "Trainee 21 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 22,
                            Bio = "Bio for Trainee 22",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee22@example.com",
                            IsDeleted = false,
                            Name = "Trainee 22 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 23,
                            Bio = "Bio for Trainee 23",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee23@example.com",
                            IsDeleted = false,
                            Name = "Trainee 23 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 24,
                            Bio = "Bio for Trainee 24",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee24@example.com",
                            IsDeleted = false,
                            Name = "Trainee 24 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 25,
                            Bio = "Bio for Trainee 25",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee25@example.com",
                            IsDeleted = false,
                            Name = "Trainee 25 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 26,
                            Bio = "Bio for Trainee 26",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee26@example.com",
                            IsDeleted = false,
                            Name = "Trainee 26 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 27,
                            Bio = "Bio for Trainee 27",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee27@example.com",
                            IsDeleted = false,
                            Name = "Trainee 27 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 28,
                            Bio = "Bio for Trainee 28",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee28@example.com",
                            IsDeleted = false,
                            Name = "Trainee 28 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 29,
                            Bio = "Bio for Trainee 29",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee29@example.com",
                            IsDeleted = false,
                            Name = "Trainee 29 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 30,
                            Bio = "Bio for Trainee 30",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "Trainee30@example.com",
                            IsDeleted = false,
                            Name = "Trainee 30 Name",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "ahmed9821hussein@gmail.com",
                            IsDeleted = false,
                            Name = "Ahmed Hussein",
                            Phone = "01015983533",
                            ProfilePictureUrl = "\\Images\\profiles\\profile-picture.jpg"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "MuhammedSadat@outlook.com",
                            IsDeleted = false,
                            Name = "Muhammed Sadat",
                            Phone = "01050403037",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "gamalsaied.90@gmail.com",
                            IsDeleted = false,
                            Name = "Gamal Said",
                            Phone = "01033901616",
                            ProfilePictureUrl = "/themefront/img/user.jpg"
                        });
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciallization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instructor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Bio for Instructor 1",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor1@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 1 Name",
                            Password = "password1"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Bio for Instructor 2",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor2@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 2 Name",
                            Password = "password2"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Bio for Instructor 3",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor3@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 3 Name",
                            Password = "password3"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Bio for Instructor 4",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor4@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 4 Name",
                            Password = "password4"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Bio for Instructor 5",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor5@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 5 Name",
                            Password = "password5"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Bio for Instructor 6",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor6@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 6 Name",
                            Password = "password6"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Bio for Instructor 7",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor7@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 7 Name",
                            Password = "password7"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Bio for Instructor 8",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor8@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 8 Name",
                            Password = "password8"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Bio for Instructor 9",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor9@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 9 Name",
                            Password = "password9"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Bio for Instructor 10",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor10@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 10 Name",
                            Password = "password10"
                        },
                        new
                        {
                            Id = 11,
                            Bio = "Bio for Instructor 11",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor11@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 11 Name",
                            Password = "password11"
                        },
                        new
                        {
                            Id = 12,
                            Bio = "Bio for Instructor 12",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor12@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 12 Name",
                            Password = "password12"
                        },
                        new
                        {
                            Id = 13,
                            Bio = "Bio for Instructor 13",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor13@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 13 Name",
                            Password = "password13"
                        },
                        new
                        {
                            Id = 14,
                            Bio = "Bio for Instructor 14",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor14@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 14 Name",
                            Password = "password14"
                        },
                        new
                        {
                            Id = 15,
                            Bio = "Bio for Instructor 15",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor15@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 15 Name",
                            Password = "password15"
                        },
                        new
                        {
                            Id = 16,
                            Bio = "Bio for Instructor 16",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor16@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 16 Name",
                            Password = "password16"
                        },
                        new
                        {
                            Id = 17,
                            Bio = "Bio for Instructor 17",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor17@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 17 Name",
                            Password = "password17"
                        },
                        new
                        {
                            Id = 18,
                            Bio = "Bio for Instructor 18",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor18@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 18 Name",
                            Password = "password18"
                        },
                        new
                        {
                            Id = 19,
                            Bio = "Bio for Instructor 19",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor19@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 19 Name",
                            Password = "password19"
                        },
                        new
                        {
                            Id = 20,
                            Bio = "Bio for Instructor 20",
                            CreatedAt = "25/06/2024 10:09:06 am",
                            Email = "instructor20@example.com",
                            ImagePath = "\\ThemeFront\\img\\User.jpg",
                            IsDeleted = false,
                            Name = "Instructor 20 Name",
                            Password = "password20"
                        });
                });

            modelBuilder.Entity("CourseTrainee", b =>
                {
                    b.HasOne("ProSkills.Models.ClientSide.Course", "Course")
                        .WithMany("Trainees")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProSkills.Models.ClientSide.Trainee", "Trainee")
                        .WithMany("Courses")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ProSkills.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ProSkills.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProSkills.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ProSkills.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProSkills.Models.ActivityLog", b =>
                {
                    b.HasOne("CourseTrainee", null)
                        .WithMany("ActivitylogList")
                        .HasForeignKey("CourseTraineeId");

                    b.HasOne("ProSkills.Models.ClientSide.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Assessment", b =>
                {
                    b.HasOne("ProSkills.Models.ClientSide.Course", "Course")
                        .WithMany("Assessments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Chapter", b =>
                {
                    b.HasOne("ProSkills.Models.ClientSide.Course", "Course")
                        .WithMany("Chapters")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Course", b =>
                {
                    b.HasOne("ProSkills.Models.ClientSide.Category", "Category")
                        .WithMany("Course")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProSkills.Models.ClientSide.instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("instructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.JoinRequest", b =>
                {
                    b.HasOne("ProSkills.Models.ClientSide.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProSkills.Models.ClientSide.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Lesson", b =>
                {
                    b.HasOne("ProSkills.Models.ClientSide.Chapter", "Chapter")
                        .WithMany("Lessons")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("CourseTrainee", b =>
                {
                    b.Navigation("ActivitylogList");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Category", b =>
                {
                    b.Navigation("Course");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Chapter", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Course", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("Chapters");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("ProSkills.Models.ClientSide.Trainee", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
